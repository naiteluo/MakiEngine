////////////////////////////////////////////////////////////////////////////////
// Filename: color.ps
////////////////////////////////////////////////////////////////////////////////
#version 400

/////////////////////
// CONSTANTS       //
/////////////////////

// update per frame
uniform vec3 lightPosition;
uniform vec4 lightColor;

uniform mat4 worldMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;

/////////////////////
// INPUT VARIABLES //
/////////////////////
in vec4 normal;
in vec4 v;


//////////////////////
// OUTPUT VARIABLES //
//////////////////////
out vec4 outputColor;


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
void main(void)
{
    float diffuseCoefficient = 1;
    float specularCoefficient = 1;

    vec3 N = normalize(normal.xyz);
    vec3 L = normalize((viewMatrix * vec4(lightPosition, 1.0f)).xyz - v.xyz);
    vec3 R = normalize(2 * dot(L, N) * N -L);
    vec3 V = normalize(v.xyz);
    float diffuse = diffuseCoefficient * dot(N, L);

    outputColor = vec4(lightColor.rgb * clamp(diffuse + specularCoefficient * dot(R, V), 0.0f, 1.0f), 1.0f);
    //    outputColor = vec4(1.0f, 0.0f, 0.0f, 1.0f);
}
